jobs:
  discover-modules:
    name: Discover Modules with Tests
    runs-on: ubuntu-latest
    outputs:
      module_list: ${{ steps.get-modules.outputs.module_list }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: List Modules with Tests
        id: get-modules
        run: |
          modules=$(find . -type d -path "*/modules/*" | while read module; do
            if [ -d "$module/tests" ]; then
              echo "$module"
            fi
          done | jq -R -s -c 'split("\n") | map(select(length > 0))')
          if [ "$modules" == "[]" ]; then
            echo "No modules with tests found!"
            exit 1
          fi
          echo "module_list=$modules" >> $GITHUB_OUTPUT
        shell: bash

      - name: Display discovered modules
        run: |
          echo "Discovered modules with tests:"
          echo '${{ steps.get-modules.outputs.module_list }}' | jq .
        shell: bash

  nf-test:
    needs: discover-modules
    runs-on: ${{ github.event.inputs.runners || 'ubuntu-latest' }}
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJson(needs.discover-modules.outputs.module_list) }}
        profile: [singularity, docker, conda]
    name: '${{ matrix.profile }} | ${{ matrix.module }}'
    env:
      SENTIEON_LICENSE_MESSAGE: ${{ secrets.SENTIEON_LICENSE_MESSAGE }}
      SENTIEON_ENCRYPTION_KEY: ${{ secrets.SENTIEON_ENCRYPTION_KEY }}
    steps:
      - name: Clean Workspace
        run: |
          rm -rf $GITHUB_WORKSPACE/*

      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Run nf-test Action
        uses: ./.github/actions/nf-test-action
        with:
          profile: ${{ matrix.profile }}
          module: ${{ matrix.module }}

      - name: Display Test Summary
        if: always()
        run: |
          echo "Module path: ${{ matrix.module }}"
          if [ -d "${{ matrix.module }}" ]; then
            echo "Module directory exists"
            if [ -f "${{ matrix.module }}/tests/main.nf.test" ]; then
              echo "Test file exists: ${{ matrix.module }}/tests/main.nf.test"
              if [ -f "${{ matrix.module }}/test.tap" ]; then
                echo "Test Summary for ${{ matrix.module }} (${{ matrix.profile }}):"
                cat ${{ matrix.module }}/test.tap | grep -E '^(not )?ok'
              else
                echo "No test.tap file found for ${{ matrix.module }}"
              fi
            else
              echo "No test file found at ${{ matrix.module }}/tests/main.nf.test"
            fi
          else
            echo "Module directory does not exist: ${{ matrix.module }}"
            ls -R $GITHUB_WORKSPACE/modules
          fi
        shell: bash
