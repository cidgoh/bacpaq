name: "nf-test Action"
description: "Runs nf-test for a specific module and profile"
inputs:
  profile:
    description: "Profile to use (singularity, docker, conda, mamba, or podman)"
    required: true
  module:
    description: "Module to test"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/setup-java@v4
      with:
        distribution: "temurin"
        java-version: "17"

    - name: Setup Nextflow
      uses: nf-core/setup-nextflow@v2
      with:
        version: "${{ env.NXF_VER }}"

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: "3.11"

    - name: Install nf-test
      uses: nf-core/setup-nf-test@v1
      with:
        version: "${{ env.NFT_VER }}"
        install-pdiff: true

    - name: Setup apptainer
      if: inputs.profile == 'singularity'
      uses: eWaterCycle/setup-apptainer@main

    - name: Set up Singularity
      if: inputs.profile == 'singularity'
      shell: bash
      run: |
        mkdir -p ${{ env.NXF_SINGULARITY_CACHEDIR }}
        mkdir -p ${{ env.NXF_SINGULARITY_LIBRARYDIR }}

    - name: Conda setup
      if: inputs.profile == 'conda' || inputs.profile == 'mamba'
      uses: conda-incubator/setup-miniconda@v3
      with:
        auto-update-conda: true
        conda-solver: libmamba
        conda-remove-defaults: true

    - name: Set up nextflow secrets
      if: env.SENTIEON_ENCRYPTION_KEY != '' && env.SENTIEON_LICENSE_MESSAGE != ''
      shell: bash
      run: |
        python -m pip install cryptography
        nextflow secrets set SENTIEON_AUTH_DATA $(python3 tests/modules/nf-core/sentieon/license_message.py encrypt --key "$SENTIEON_ENCRYPTION_KEY" --message "$SENTIEON_LICENSE_MESSAGE")

    - name: Clone test-datasets
      uses: actions/checkout@v4
      with:
        repository: nf-core/test-datasets
        path: test-datasets

    - name: Run nf-test
      shell: bash
      env:
        SENTIEON_LICSRVR_IP: ${{ env.SENTIEON_LICSRVR_IP }}
        SENTIEON_AUTH_MECH: "GitHub Actions - token"
        NFT_WORKDIR: "~"
        PROFILE: ${{ inputs.profile }}
      run: |
        module_path="modules/nf-core/${{ inputs.module }}"
        echo "Checking module path: $module_path"
        ls -R $module_path

        if [ -d "$module_path" ]; then
          cd "$module_path"
          echo "Current directory: $(pwd)"
          echo "Contents of current directory:"
          ls -la

          if [ -f "tests/main.nf.test" ]; then
            echo "Test file found. Setting up environment..."

            # Create or modify nf-test.config
            echo "profiles = ['${{ inputs.profile }}']" > nf-test.config
            echo "config = ['$GITHUB_WORKSPACE/tests/config/nextflow.config']" >> nf-test.config
            echo "modules_testdata_base_path = '$GITHUB_WORKSPACE/test-datasets'" >> nf-test.config

            echo "nf-test.config contents:"
            cat nf-test.config

            echo "Running nf-test..."
            nf-test test \
              --profile=${{ inputs.profile }} \
              --tap=test.tap \
              --verbose \
              --ci \
              --filter process,workflow \
              tests/main.nf.test

            echo "nf-test execution completed. test.tap contents:"
            cat test.tap
          else
            echo "No 'main.nf.test' file found in $module_path/tests"
            echo "1..0 # SKIP No test file found" > test.tap
          fi
        else
          echo "Module directory not found: $module_path"
          echo "1..0 # SKIP Module directory not found" > test.tap
        fi

    - uses: pcolby/tap-summary@v1
      if: always()
      with:
        path: modules/nf-core/${{ inputs.module }}/test.tap

    - name: Clean up
      if: always()
      shell: bash
      run: |
        sudo rm -rf /home/ubuntu/tests/
