{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://raw.githubusercontent.com/cidgoh/bacpaq//nextflow_schema.json",
  "title": "cidgoh/bacpaq pipeline parameters",
  "description": "Quality control workflow for short-reads (Illumina) and long-reads (Oxford Nanopore) sequencing data including WGS, Amplicon and Metagenomics",
  "type": "object",
  "$defs": {
    "input_output_options": {
      "title": "Input/output options",
      "type": "object",
      "fa_icon": "fas fa-terminal",
      "description": "Define where the pipeline should find input data and save output data.",
      "required": ["input", "outdir"],
      "properties": {
        "input": {
          "type": "string",
          "format": "file-path",
          "exists": true,
          "schema": "assets/schema_input.json",
          "mimetype": "text/csv",
          "pattern": "^\\S+\\.csv$",
          "description": "Path to comma-separated file containing information about the samples in the experiment.",
          "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
          "fa_icon": "fas fa-file-csv"
        },
        "outdir": {
          "type": "string",
          "format": "directory-path",
          "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
          "fa_icon": "fas fa-folder-open"
        }
      }
    },
    "generic_options": {
      "title": "Generic options",
      "type": "object",
      "fa_icon": "fas fa-file-import",
      "description": "Less common options for the pipeline, typically set in a config file.",
      "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
      "properties": {
        "version": {
          "type": "boolean",
          "description": "Display version and exit.",
          "fa_icon": "fas fa-question-circle",
          "hidden": true
        },
        "validate_params": {
          "type": "boolean",
          "description": "Boolean whether to validate parameters against the schema at runtime",
          "fa_icon": "fas fa-check-square",
          "hidden": true
        }
      }
    }
  },
  "allOf": [
    {
      "$ref": "#/$defs/input_output_options"
    },
    {
      "$ref": "#/$defs/generic_options"
    }
  ],
  "properties": {
    "classifier": {
      "type": "string",
      "default": "kraken2"
    },
    "fasta": {
      "type": "string",
      "default": "test.fa"
    },
    "tracedir": {
      "type": "string",
      "default": "[:]/pipeline_info"
    },
    "skip_subsampling": {
      "type": "boolean",
      "default": true
    },
    "depth_cut_off": {
      "type": "integer",
      "default": 50
    },
    "subsampling_genomesize": {
      "type": "integer",
      "default": 5000000
    },
    "skip_confindr": {
      "type": "boolean"
    },
    "confindr_db": {
      "type": "string"
    },
    "skip_seqqc": {
      "type": "boolean"
    },
    "skip_trimming": {
      "type": "boolean"
    },
    "trim_tool": {
      "type": "string",
      "default": "fastp"
    },
    "adapter_fasta": {
      "type": "string"
    },
    "save_trimmed_fail": {
      "type": "boolean"
    },
    "save_merged": {
      "type": "boolean",
      "default": true
    },
    "discard_trimmed_pass": {
      "type": "boolean"
    },
    "max_multiqc_email_size": {
      "type": "string",
      "default": "25.MB"
    },
    "multiqc_title": {
      "type": "string",
      "default": "BACPAQ"
    },
    "multiqc_logo": {
      "type": "string",
      "default": "/scratch/mzanwar/nf-seqqc/docs/images/LogoCIDGOH2.png"
    },
    "multiqc_methods_description": {
      "type": "string"
    },
    "skip_nanocomp": {
      "type": "boolean"
    },
    "skip_pycoqc": {
      "type": "boolean"
    },
    "skip_porechop": {
      "type": "boolean"
    },
    "nanopore_summary_file": {
      "type": "string"
    },
    "assembly_genomesize": {
      "type": "string",
      "default": "\\'\\"
    },
    "min_contig_len": {
      "type": "integer",
      "default": 500
    },
    "min_contig_coverage": {
      "type": "integer",
      "default": 2
    },
    "min_input_read_len": {
      "type": "integer",
      "default": 1000
    },
    "min_input_quality": {
      "type": "integer",
      "default": 0
    },
    "skip_medaka": {
      "type": "boolean"
    },
    "racon_rounds": {
      "type": "integer",
      "default": 0
    },
    "medaka_rounds": {
      "type": "integer",
      "default": 0
    },
    "medaka_model": {
      "type": "string",
      "default": "r1041_e82_400bps_hac_v4.3.0"
    },
    "skip_dehosting": {
      "type": "boolean"
    },
    "skip_combinekreports": {
      "type": "boolean"
    },
    "skip_kreport2krona": {
      "type": "boolean"
    },
    "skip_bracken": {
      "type": "boolean"
    },
    "skip_kraken2": {
      "type": "boolean"
    },
    "skip_combinebrackenoutputs": {
      "type": "boolean"
    },
    "skip_quality_report": {
      "type": "boolean"
    },
    "kraken2_db": {
      "type": "string"
    },
    "classified_reads": {
      "type": "boolean",
      "default": true
    },
    "unclassified_reads": {
      "type": "boolean",
      "default": true
    },
    "centrifuge_db": {
      "type": "string"
    },
    "save_unaligned": {
      "type": "boolean",
      "default": true
    },
    "save_aligned": {
      "type": "boolean",
      "default": true
    },
    "sam_format": {
      "type": "boolean",
      "default": true
    },
    "dehosting_aligner": {
      "type": "string",
      "default": "minimap2"
    },
    "host_genome": {
      "type": "string"
    },
    "host_genome_id": {
      "type": "string",
      "default": "GRCh38"
    },
    "bwa_sort_bam": {
      "type": "string",
      "default": "sort"
    },
    "bam_format": {
      "type": "boolean",
      "default": true
    },
    "cigar_paf_format": {
      "type": "boolean"
    },
    "cigar_bam": {
      "type": "boolean"
    },
    "interleaved": {
      "type": "boolean"
    },
    "publish_dir_mode": {
      "type": "string",
      "default": "copy"
    },
    "email": {
      "type": "string"
    },
    "email_on_fail": {
      "type": "string"
    },
    "plaintext_email": {
      "type": "boolean"
    },
    "monochrome_logs": {
      "type": "boolean"
    },
    "hook_url": {
      "type": "string"
    },
    "show_hidden_params": {
      "type": "boolean"
    },
    "schema_ignore_params": {
      "type": "string",
      "default": "genomes,fasta"
    },
    "skip_checkm": {
      "type": "boolean"
    },
    "skip_quast": {
      "type": "boolean"
    },
    "skip_busco": {
      "type": "boolean"
    },
    "sr_assembler": {
      "type": "string",
      "default": "spades"
    },
    "nanopore_qual": {
      "type": "string",
      "default": "raw"
    },
    "checkm_db": {
      "type": "string"
    },
    "reference_genome_fasta": {
      "type": "string"
    },
    "reference_genome_gff": {
      "type": "string"
    },
    "combine_quast": {
      "type": "boolean"
    },
    "busco_lineage": {
      "type": "string",
      "default": "bacteria"
    },
    "busco_lineages_path": {
      "type": "string"
    },
    "busco_config": {
      "type": "boolean"
    },
    "reference_gff": {
      "type": "string"
    },
    "config_profile_name": {
      "type": "string"
    },
    "config_profile_description": {
      "type": "string"
    },
    "custom_config_version": {
      "type": "string",
      "default": "master"
    },
    "custom_config_base": {
      "type": "string",
      "default": "https://raw.githubusercontent.com/nf-core/configs/master"
    },
    "config_profile_contact": {
      "type": "string"
    },
    "config_profile_url": {
      "type": "string"
    },
    "skip_QC": {
      "type": "boolean"
    },
    "skip_taxonomy_qc": {
      "type": "boolean"
    },
    "skip_assembly": {
      "type": "boolean"
    },
    "skip_assembly_qc": {
      "type": "boolean"
    },
    "skip_rmlst": {
      "type": "boolean"
    },
    "max_memory": {
      "type": "string",
      "default": "128.GB"
    },
    "max_cpus": {
      "type": "integer",
      "default": 16
    },
    "max_time": {
      "type": "string",
      "default": "240.h"
    },
    "skip_annotation": {
      "type": "boolean"
    },
    "skip_gene_annotation": {
      "type": "boolean"
    },
    "skip_abricate_summary": {
      "type": "boolean"
    },
    "amrfinderplus_db": {
      "type": "string"
    },
    "skip_resfinder": {
      "type": "boolean"
    },
    "skip_virsorter2": {
      "type": "boolean"
    },
    "skip_crispr_analysis": {
      "type": "boolean"
    },
    "amr_finderplus_db": {
      "type": "string"
    },
    "skip_amr_annotation": {
      "type": "boolean"
    },
    "skip_rgi": {
      "type": "boolean"
    },
    "skip_abricate": {
      "type": "boolean"
    },
    "abricate_db": {
      "type": "string",
      "default": "card"
    },
    "skip_abritamr": {
      "type": "boolean"
    },
    "skip_amrfinderplus": {
      "type": "boolean"
    },
    "resfinder_db": {
      "type": "string"
    },
    "pointfinder_db": {
      "type": "string"
    },
    "disinfinder_db": {
      "type": "string"
    },
    "resfinder_species": {
      "type": "string",
      "default": "other"
    },
    "skip_prokka": {
      "type": "boolean"
    },
    "skip_bakta": {
      "type": "boolean"
    },
    "bakta_db": {
      "type": "string"
    },
    "prodigal_training_file": {
      "type": "string"
    },
    "annotation_protein_file": {
      "type": "string"
    },
    "skip_phage_annotation": {
      "type": "boolean"
    },
    "virsorter_db": {
      "type": "string"
    },
    "virsorter_virus_grp": {
      "type": "string",
      "default": "dsDNAphage,ssDNA"
    },
    "virsorter_min_len": {
      "type": "integer",
      "default": 5000
    },
    "virsorter_min_score": {
      "type": "number",
      "default": 0.4
    },
    "skip_pangenome_analysis": {
      "type": "boolean"
    },
    "pangenome_input": {
      "type": "string",
      "default": "bakta"
    },
    "skip_roary": {
      "type": "boolean"
    },
    "skip_pirate": {
      "type": "boolean"
    },
    "skip_panaroo": {
      "type": "boolean"
    },
    "clean_mode": {
      "type": "string",
      "default": "moderate"
    },
    "skip_peppan": {
      "type": "boolean"
    },
    "skip_plasmid_analysis": {
      "type": "boolean"
    },
    "skip_plasmidfinder": {
      "type": "boolean"
    },
    "skip_mobsuite": {
      "type": "boolean"
    },
    "skip_cctyper": {
      "type": "boolean"
    },
    "skip_variant_viz": {
      "type": "boolean"
    },
    "skip_variant_detection": {
      "type": "boolean"
    },
    "reference_genome": {
      "type": "string"
    },
    "snp_threshold": {
      "type": "number",
      "default": 0.95
    },
    "skip_gubbins": {
      "type": "boolean"
    },
    "snp_minqual": {
      "type": "integer",
      "default": 100
    },
    "snp_mincov": {
      "type": "integer",
      "default": 10
    },
    "skip_coresnpfilter": {
      "type": "boolean"
    },
    "skip_igvreports": {
      "type": "boolean"
    },
    "skip_iqtree": {
      "type": "boolean"
    }
  }
}
